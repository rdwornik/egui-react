<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Library App</title>
  </head>
  <body>
        <div id="container"></div>
        <script src="https://fb.me/react-15.0.0.js"></script>
        <script src="https://fb.me/react-dom-15.0.0.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js"></script>
        <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <style>
          .filters {
            font-weight: bold;
            font-size: 30px;
          }
          .tableStyle {
            max-height: 400px;
            overflow: auto;
          }
        </style>
  <script type="text/babel">

class Book extends React.Component{
  constructor(props, onCheckedToggle){
    super(props)
  }

  render() {
    return(
      <tr>
        <th scope="row">
          <div className="form-check">
            <input className="form-check-input" type="checkbox" value={this.props.checked} id="defaultCheck1" onChange={this.props.onCheckedToggle} />
            <label className="form-check-label" for="defaultCheck1"/>
          </div>
        </th>
        <td>{this.props.author}</td>
        <td>{this.props.title}</td>
        <td>{this.props.year}</td>
      </tr>
    );
  }
}
class App extends React.Component{
  constructor(props){
      super(props);
      this.addBookOnClick = this.addBookOnClick.bind(this);
      this.editBookOnClick = this.editBookOnClick.bind(this);
      this.deleteBookOnClick = this.deleteBookOnClick.bind(this);
      this.onChangeAuthor = this.onChangeAuthor.bind(this);
      this.onChangeTitle = this.onChangeTitle.bind(this);
      this.onChangeYear = this.onChangeYear.bind(this);
      this.onCheckBoxChange = this.onCheckBoxChange.bind(this);
      //this.handleChange = this.handleChange.bind(this);
      //this.onChange = this.onChange.bind(this);
      this.state = {
      books: [],
      filters: {
        title: "",
        author: "",
        year: ""
      },
      id: '',
      title: '',
      author: '',
      year: '',
      checked: false,
    };    
  }
 // this.props.book.filter(book => book.checked) zwróci array t

 componentDidMount() {
    axios.get('/Home/List')
      .then(response => this.setState({ 
        books: response.data.books.map(book => ({
          author: book.author,
          title: book.title,
          year: book.year,
          id: book.id,
          checked: false
        })),
       }))
  }
 
  doClear() {
    this.setState({filters: {
      title: "",
      author: "",
      year: ""
    }})
  }
  addBookModal(){
    return(
      //button trigerr model than modal
        <div>
          <button type="button" className="btn btn-primary m-3" data-toggle="modal" data-target="#exampleModal" >
            Add Book
          </button>        
          <div className="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div className="modal-dialog" role="document">
              <div className="modal-content">
                <div className="modal-header">
                  <h5 className="modal-title" id="exampleModalLabel">Add Book</h5>
                  <button type="button" className="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div className="modal-body">
                  <div class="input-group mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Author</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"
                    defaultValue={this.state.author} onInput={this.onChangeAuthor}
                    />
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Title</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"
                    defaultValue={this.state.title}  onInput={this.onChangeTitle}
                    />
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Year</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"
                    defaultValue={this.state.year}  onInput={this.onChangeYear}
                    />
                  </div>
                </div> 
                <div className="modal-footer">
                  <button type="button" className="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="button" className="btn btn-primary" data-dismiss="modal" onClick={this.addBookOnClick}>Create</button>
                </div>
              </div>
            </div>
          </div>
        </div>
    )
  }
  editBookModal(){
    return(
       <div>
          <button type="button" className="btn btn-primary m-3" data-toggle="modal" data-target="#exampleModalEdit" >
            Edit Book
          </button>        
          <div className="modal fade" id="exampleModalEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div className="modal-dialog" role="document">
              <div className="modal-content">
                <div className="modal-header">
                  <h5 className="modal-title" id="exampleModalLabel">Edit book</h5>
                  <button type="button" className="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div className="modal-body">
                  <div class="input-group mb-3">
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Author</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"/>
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Title</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"/>
                    <div class="input-group-prepend">
                      <span class="input-group-text" id="inputGroup-sizing-default">Year</span>
                    </div>
                    <input type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default"/>
                  </div>
                </div> 
                <div className="modal-footer">
                  <button type="button" className="btn btn-secondary" data-dismiss="modal">Close</button>
                  <button type="button" className="btn btn-primary" data-dismiss="modal" onClick={this.editBookOnClick}>Edit</button>
                </div>
              </div>
            </div>
          </div>
        </div>
    )
  }

  deleteBookModal(){
    return(
       <button type="button" className="btn btn-primary m-3"  onClick={this.deleteBookOnClick} >
            Del Book
       </button>
    )
  }
 
  onChangeAuthor(event){
     this.setState({author: event.target.value});
}
  onChangeTitle(event){
    this.setState({title: event.target.value});
}
  onChangeYear(event){
    this.setState({year: event.target.value});
  }

  onCheckBoxChange(event){
    console.log("hej")
    this.setState({checked: event.target.value})
  }

  addBookOnClick (event) {
    //const list = this.props.book.filter(book => book.checked);
    axios({
        method: 'post',
        url: '/Home/Create',
        data: {
          "Author": this.state.author,
            "Title":this.state.title,
            "Year": this.state.year,
        }
    })
    .then(response => {
        this.setState({
          books: [...this.state.books, response.data]
        })
    })
    .catch(error => console.log('error'))
  }

  editBookOnClick(){
    axios({
        method: 'post',
        url: '/Home/Edit',
        data: {
            "Author": 'autho to edit',
            "Title": 'title to edit',
            "Year": '124 to edit',
        }
    })
    .then(response => {
        console.log("success edited!")
    })
    .catch(error => console.log('error'))
  }
  deleteBookOnClick(){
    axios({
        method: 'post',
        url: '/Home/Delete',
        data: {
            "Author": 'autho to delete',
            "Title": 'title to delete',
            "Year": '124 to delete',
        }
    })
    .then(response => {
        console.log("success deleted!")
    })
    .catch(error => console.log('error'))
  }
  filterCard(){
    return(
       <div className="card m-3 p-3">
            <span className="filters">Filters:</span>
            <div className="row">
                <div className="col-4">
                  <div className="form-group">
                    <label for="formGroupExampleInput">Author</label>
                    <input type="text" className="form-control" id="formGroupExampleInput" placeholder="Example input"/>
                  </div>
                </div>
                <div className="col-4">
                  <div className="form-group">
                      <label for="formGroupExampleInput2">Title</label>
                      <input type="text" className="form-control" id="formGroupExampleInput2" placeholder="Another input"/>
                  </div>
                </div>
                <div className="col-2">
                    <div className="form-group">
                    <label for="formGroupExampleInput2">Year</label>
                    <input type="text" className="form-control" id="formGroupExampleInput2" placeholder="Another input"/>
                    </div>
                </div>
                <div className="col-2">
                    <label for="buttonClear">&nbsp;</label>
                    <button className="form-control" id="buttonClear" onClick={this.doClear}>
                    Clear
                    </button>
                </div>
              </div>
          </div>
    )
  }
  
  bookListCard() {
    return (
      <div className="card m-3 p-3 tableStyle">
        <table className="table">
          <thead>
            <tr>
              <th scope="col">Selected</th>
              <th scope="col">Author</th>
              <th scope="col">Title</th>
              <th scope="col">Year</th>
            </tr>
          </thead>
          <tbody>
            {this.state.books.map((book,index) => (
                <Book 
                  onCheckedToggle={this.onCheckBoxChange}
                  key={index}
                  id={book.id}
                  author={book.author}
                  title={book.title}
                  year={book.year}
                  checkbox={this.state.checked}
                />
            ))}
          </tbody>
        
        </table>
      </div>
    )
  }

  render() {
    return (
      <div className="container">
        <div className="card my-5">
          {this.filterCard()}
          {this.bookListCard()}
        <div className="card m-3 p-3">
           <div className="row">
              <div className="col-4 ">
                {this.addBookModal()}
              </div>
              <div className="col-4">
                {this.editBookModal()}
              </div>
              <div className="col-4">
                {this.deleteBookModal()}
              </div>
            </div>
         </div>
        </div>
      </div>
    )
  }
}

ReactDOM.render(
  <App title="Library"/>,
  container,
);



  </script>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

</body>
</html>


